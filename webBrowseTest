import tkinter as tk
from selenium import webdriver
from selenium.webdriver.common.keys import Keys
from selenium.webdriver.firefox.service import Service as FirefoxService
from bs4 import BeautifulSoup
import time

# Variables used to build the list of Google Maps search URLs
search_parameters = ["Engineering", "Architecture", "Architect", "Manufacturing", "Manufacturer", "Distribution+Center", "Law+Office", "Lawyer", "Catholic+Schools", "Private+Schools", "Public+Schools"]
maps_address = "https://www.google.com/maps/search/"
search_urls = []
scrapable_sites = []

#Variables used for the output CSV file
def extract_contacts

# Variables for Beautiful Soup
selectors = {
    'Website': 'a[data-value="Website"]'
}

def create_web_string():
    location_text = location_entry.get()
    location_list = location_text.split()
    location_string = '+'.join(location_list)

    radius_string = "+" + radius_var.get() + "+miles+from+"
    search_string = radius_string + location_string

    for parameter in search_parameters:
        web_string = maps_address + str(parameter) + search_string
        search_urls.append(web_string)

    # Set up Selenium
    firefox_service = FirefoxService("C:\\Users\\BrittanyWalker\\Python\\geckodriver.exe")
    firefox_options.headless = True
    driver = webdriver.Firefox(service=firefox_service)

    try:
        for url in search_urls:
            driver.get(url)
            time.sleep(5)

            soup = BeautifulSoup(driver.page_source, 'html.parser')

            results = {key.capitalize(): [] for key in selectors}
            for key, selector in selectors.items():
                elements = soup.select(selector)
                for element in elements:
                    text = element.get('href')
                    scrapable_sites.append(text)
        print(scrapable_sites)
    finally:
        driver.quit()


# GUI setup
root = tk.Tk()
root.title("Lead Search Tool")
root.geometry("400x200")  # Width x Height

# Location Entry
location_label = tk.Label(root, text="Enter Client Location:")
location_label.pack()

location_entry = tk.Entry(root)
location_entry.pack()

# Radius Dropdown
radius_label = tk.Label(root, text="Select Radius in Miles:")
radius_label.pack()

radius_var = tk.StringVar(root)
radius_var.set("10")  # Default radius
radius_dropdown = tk.OptionMenu(root, radius_var, "5", "10", "15", "20", "25", "30")
radius_dropdown.pack()

# Search Button
search_button = tk.Button(root, text="Search", command=create_web_string)
search_button.pack()

# Run the Tkinter event loop
root.mainloop()
